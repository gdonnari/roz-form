{
  "version": 3,
  "sources": ["../src/index.js", "../src/FormProvider.jsx", "../src/form.jsx", "../src/input.jsx", "../src/select.jsx", "../src/option_list.jsx", "../src/option.jsx", "../src/textarea.jsx", "../src/button.jsx", "../src/datalist.jsx", "../src/StateValue.js", "../src/ErrorMessage.js"],
  "sourcesContent": ["export { FormProvider } from \"./FormProvider.jsx\";\nexport { Form } from \"./form.jsx\";\nexport { Input } from \"./input.jsx\";\nexport { Select } from \"./select.jsx\";\nexport { Textarea } from \"./textarea.jsx\";\nexport { Button } from \"./button.jsx\";\nexport { Datalist } from \"./datalist.jsx\";\nexport { StateValue } from \"./StateValue.js\";\nexport { ErrorMessage } from \"./ErrorMessage.js\";", "import React from 'react';\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nexport function useFromContext(context, field = false) {\r\n    const ctx = React.useContext(Context);\r\n\r\n    if (field)\r\n        return ctx[context][field];\r\n\r\n    return ctx[context];\r\n}\r\n\r\nexport function useFieldState(field, defaultValue = '') {\r\n    const ctx = React.useContext(Context);\r\n    const state = {...ctx.state[field]};\r\n    state.value ??= defaultValue;\r\n    state.error ??= false;\r\n    return state;\r\n}\r\n\r\nfunction init(data) {\r\n    const state = {};\r\n\r\n    for (let key in data) {\r\n\r\n        let value = data[key];\r\n\r\n        if (Array.isArray(value))\r\n            value = [...data[key]];\r\n\r\n        state[key] = {\r\n            value: value,\r\n            error: false\r\n        };\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    const updated = {};\r\n    const fieldState = {...state[action.field]};\r\n    let value = fieldState.value;\r\n    let index = -1;\r\n    let error = false;\r\n\r\n    switch (action.type) {\r\n        case 'setValue':\r\n\r\n            updated[action.field] = {\r\n                value: action.data,\r\n                error: false\r\n            };\r\n            break;\r\n\r\n        case 'addValue':\r\n\r\n            if (Array.isArray(fieldState.value))\r\n                value = [...fieldState.value];\r\n            else\r\n                value = [];\r\n\r\n            index = value.indexOf(action.data);\r\n\r\n            if (index === -1)\r\n                value.push(action.data);\r\n\r\n            updated[action.field] = {\r\n                value: value,\r\n                error: false\r\n            };\r\n\r\n            break;\r\n\r\n        case 'removeValue':\r\n\r\n            if (Array.isArray(fieldState.value))\r\n                value = [...fieldState.value];\r\n            else\r\n                value = [];\r\n\r\n            index = value.indexOf(action.data);\r\n\r\n            if (index > -1)\r\n                value.splice(index, 1);\r\n\r\n            updated[action.field] = {\r\n                value: value,\r\n                error: false\r\n            };\r\n            break;\r\n\r\n        case 'setError':\r\n\r\n            let errorMessage = action.data;\r\n\r\n            if (errorMessage === '')\r\n                errorMessage = false;\r\n\r\n            updated[action.field] = fieldState;\r\n            updated[action.field].error = errorMessage;\r\n            break;\r\n\r\n        case 'reset':\r\n\r\n            return action.data;\r\n\r\n        default:\r\n            throw Error('Unknown action: ' + action.type);\r\n    }\r\n\r\n    const tmpState = {...state, ...updated};\r\n\r\n    // Set form state to disable or enable submit\r\n    for (let fieldKey in tmpState) {\r\n        if (fieldKey === 'form')\r\n            continue;\r\n        if (tmpState[fieldKey].error) {\r\n            error = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    updated['form'] = {error: error};\r\n    const newState = {...tmpState, ...updated};\r\n    return newState;\r\n}\r\n\r\nexport function useInvalidHandler(userHandler, validate) {\r\n    const dispatch = useFromContext('dispatch');\r\n\r\n    function handler(e) {\r\n\r\n        if (validate)\r\n            dispatch({\r\n                type: 'setError',\r\n                field: e.target.name,\r\n                data: e.target.validationMessage\r\n            });\r\n\r\n        // Call the user handler\r\n        if (userHandler)\r\n            userHandler(e);\r\n    }\r\n\r\n    return handler;\r\n}\r\n\r\nexport function useChangeHandler(userHandler, validateOnChange) {\r\n    const dispatch = useFromContext('dispatch');\r\n\r\n    function handler(e) {\r\n        let action = 'setValue';\r\n        let value = e.target.value;\r\n\r\n        switch (e.target.type) {\r\n            case 'select-multiple':\r\n                value = Array.from(e.target.selectedOptions, option => option.value);\r\n                break;\r\n            case 'checkbox':\r\n\r\n                if (e.target.multiple) {\r\n                    if (e.target.checked)\r\n                        action = 'addValue';\r\n                    else\r\n                        action = 'removeValue';\r\n                } else {\r\n                    if (!e.target.checked)\r\n                        value = '';\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        dispatch({\r\n            type: action,\r\n            field: e.target.name,\r\n            data: value\r\n        });\r\n\r\n        if (validateOnChange && e.target.checkValidity()) {\r\n            dispatch({\r\n                type: 'setError',\r\n                field: e.target.name,\r\n                data: e.target.validationMessage\r\n            });\r\n        }\r\n\r\n        // Call the user handler\r\n        if (userHandler)\r\n            userHandler(e);\r\n    }\r\n\r\n    return handler;\r\n}\r\n\r\nexport function useBlurHandler(userHandler, validateOnBlur) {\r\n    const dispatch = useFromContext('dispatch');\r\n\r\n    function handler(e) {\r\n\r\n        if (validateOnBlur && e.target.checkValidity()) {\r\n            dispatch({\r\n                type: 'setError',\r\n                field: e.target.name,\r\n                data: e.target.validationMessage\r\n            });\r\n        }\r\n\r\n        // Call the user handler\r\n        if (userHandler)\r\n            userHandler(e);\r\n    }\r\n\r\n    return handler;\r\n}\r\n\r\nexport function useSubmitHandler(userHandler) {\r\n    const validate = useFromContext('validate');\r\n\r\n    function handler(e) {\r\n        e.preventDefault();\r\n\r\n        if (validate && !e.target.checkValidity())\r\n            return false;\r\n\r\n        // Call the user handler\r\n        if (userHandler) {\r\n            userHandler(e);\r\n            return false;\r\n        }\r\n\r\n        e.target.submit();\r\n    }\r\n\r\n    return handler;\r\n}\r\n\r\nexport function useResetHandler(userHandler) {\r\n    const dispatch = useFromContext('dispatch');\r\n    const initialState = useFromContext('initialState');\r\n\r\n    function handler(e) {\r\n        e.preventDefault();\r\n\r\n        dispatch({\r\n            type: 'reset',\r\n            data: initialState\r\n        });\r\n\r\n        // Call the user handler\r\n        if (userHandler)\r\n            userHandler(e);\r\n    }\r\n\r\n    return handler;\r\n}\r\n\r\n// Set default settings\r\nfunction setValidationDefaults(validation) {\r\n\r\n    const defaults = {\r\n        validate: true,\r\n        onBlurValidate: true,\r\n        onChangeValidate: false,\r\n        invalidClassName: 'roz-invalid'\r\n    };\r\n\r\n    return {...defaults, ...validation};\r\n}\r\n\r\nexport function FormProvider(props) {\r\n\r\n    const validation = setValidationDefaults(props.validation);\r\n    const initialState = init(props.data);\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n    const context = {\r\n        initialState: initialState,\r\n        state: state,\r\n        dispatch: dispatch,\r\n        validation: validation\r\n    };\r\n\r\n    return (<Context.Provider value={context}>\r\n        {props.children}\r\n    </Context.Provider>);\r\n}", "import React from 'react';\nimport * as FormProvider from \"./FormProvider.jsx\";\n\nfunction Form(props) {\n\n    const validation = FormProvider.useFromContext('validation');\n    const submitHandler = FormProvider.useSubmitHandler(props.onSubmit);\n    const resetHandler = FormProvider.useResetHandler(props.onReset);\n\n    // Form\n    const form = {...props};\n    form.onSubmit = submitHandler;\n    form.onReset = resetHandler;\n    delete form.children;\n\n    if (validation.validate)\n        form.noValidate = true;\n\n    return (<form {...form}>\n        {props.children}\n    </form>);\n}\n\nexport { Form };", "import React from 'react';\nimport * as FormProvider from \"./FormProvider.jsx\";\n\nfunction Input(props) {\n\n    // Name attribute is required\n    if (!props.name)\n        throw Error('Roz requires to set a name attribute for each managed input. Please review your form inputs.');\n\n    const validation = FormProvider.useFromContext('validation');\n    let blurEnabled = true;\n\n    // Do not validate on blur for checkbox and radio\n    if (props.type === 'checkbox' || props.type === 'radio')\n        blurEnabled = false;\n\n    const validateOnBlur = props.validateOnBlur ?? (validation.validate && validation.onBlurValidate && blurEnabled);\n    const validateOnChange = props.validateOnChange ?? (validation.validate && validation.onChangeValidate);\n\n    const blurHandler = FormProvider.useBlurHandler(props.onBlur, validateOnBlur);\n    const changeHandler = FormProvider.useChangeHandler(props.onChange, validateOnChange);\n    const invalidHandler = FormProvider.useInvalidHandler(props.onInvalid, validation.validate);\n\n    let defaultValue = '';\n\n    if (props.multiple)\n        defaultValue = [];\n\n    const state = FormProvider.useFieldState(props.name, defaultValue);\n\n    // Input\n    const input = {...props};\n    input.value ??= state.value;\n\n    if (props.type === 'hidden')\n        return (<input {...input} />);\n\n    input.onInvalid = invalidHandler;\n    input.onChange = changeHandler;\n    input.onBlur = blurHandler;\n    input.className ??= '';\n    delete input.validateOnChange;\n\n    // invalidClassName\n    delete input.invalidClassName;\n\n    if (state.error) {\n        const invalidClassName = props.invalidClassName ?? validation.invalidClassName;\n        input.className += ' ' + invalidClassName;\n    }\n\n    function getChecked(values) {\n        let count = values.length;\n        for (let i = 0; i < count; i++)\n            if (props.value === values[i])\n                return true;\n\n        return false;\n    }\n\n    if (props.type === 'checkbox') {\n        if (props.multiple) {\n            input.checked = getChecked(state.value);\n        } else {\n            input.checked = (props.value === state.value);\n        }\n    }\n\n    if (props.type === 'radio')\n        input.checked = (props.value === state.value);\n\n    return (<input {...input}/>);\n}\n\nexport { Input };", "import React from 'react';\nimport * as FormProvider from \"./FormProvider.jsx\";\nimport { OptionList } from \"./option_list.jsx\";\n\nfunction Select(props) {\n\n    // Name attribute is required\n    if (!props.name)\n        throw Error('Roz requires to set a name attribute for each managed input. Please review your form inputs.');\n\n    const validation = FormProvider.useFromContext('validation');\n    const validateOnBlur = props.validateOnBlur ?? (validation.validate && validation.onBlurValidate);\n    const validateOnChange = props.validateOnChange ?? (validation.validate && validation.onChangeValidate);\n\n    const blurHandler = FormProvider.useBlurHandler(props.onBlur, validateOnBlur);\n    const changeHandler = FormProvider.useChangeHandler(props.onChange, validateOnChange);\n    const invalidHandler = FormProvider.useInvalidHandler(props.onInvalid, validation.validate);\n    let defaultValue = '';\n\n    if (props.multiple)\n        defaultValue = [];\n\n    const state = FormProvider.useFieldState(props.name, defaultValue);\n    let value = state.value;\n\n    if (props.multiple && !Array.isArray(state.value))\n        value = [];\n\n    // Select\n    const select = {...props};\n    select.onChange = changeHandler;\n    select.onInvalid = invalidHandler;\n    select.onBlur = blurHandler;\n    select.value ??= value;\n    select.className ??= '';\n\n    // invalidClassName\n    delete select.invalidClassName;\n    \n    if (state.error) {\n        const invalidClassName = props.invalidClassName ?? validation.invalidClassName;\n        select.className += ' ' + invalidClassName;\n    }\n\n    if (props.options) {\n        delete select.options;\n        return (<select {...select}>\n            <OptionList options={props.options} />\n        </select>);\n    }\n\n    delete select.children;\n\n    return (<select {...select}>\n        {props.children}\n    </select>);\n}\n\nexport { Select };", "import React from 'react';\nimport { Option } from \"./option.jsx\";\n\nfunction OptionList(props) {\n\n    // Options\n    let options = [];\n\n    if (props.options) {\n        options = props.options.map(function (option, index) {\n            const _props = {...option};\n            _props.key = index;\n            return (<Option {..._props}/>);\n        });\n    }\n\n    return options;\n}\n\nexport { OptionList };", "import React from 'react';\n\nfunction Option(props) {\n\n    // Option\n    const option = {...props};\n    delete option.text;\n\n    if (props.text)\n        return (<option {...option}>{props.text}</option>);\n\n    return (<option {...option} />);\n}\n\nexport { Option };", "import React from 'react';\nimport * as FormProvider from \"./FormProvider.jsx\";\n\nfunction Textarea(props) {\n\n    // Name attribute is required\n    if (!props.name)\n        throw Error('Roz requires to set a name attribute for each managed input. Please review your form inputs.');\n\n    const validation = FormProvider.useFromContext('validation');\n    const validateOnBlur = props.validateOnBlur ?? (validation.validate && validation.onBlurValidate);\n    const validateOnChange = props.validateOnChange ?? (validation.validate && validation.onChangeValidate);\n\n    const blurHandler = FormProvider.useBlurHandler(props.onBlur, validateOnBlur);\n    const changeHandler = FormProvider.useChangeHandler(props.onChange, validateOnChange);\n    const invalidHandler = FormProvider.useInvalidHandler(props.onInvalid, validation.validate);\n    const state = FormProvider.useFieldState(props.name);\n\n    // Textarea\n    const textarea = {...props};\n    textarea.onChange = changeHandler;\n    textarea.onInvalid = invalidHandler;\n    textarea.onBlur = blurHandler;\n    textarea.value ??= state.value;\n    textarea.className ??= '';\n\n    // invalidClassName\n    delete textarea.invalidClassName;\n    \n    if (state.error) {\n        const invalidClassName = props.invalidClassName ?? validation.invalidClassName;\n        textarea.className += ' ' + invalidClassName;\n    }\n\n    return (<textarea {...textarea}/>);\n}\n\nexport { Textarea };", "import React from 'react';\nimport * as FormProvider from \"./FormProvider.jsx\";\n\nfunction Button(props) {\n\n    const state = FormProvider.useFieldState('form');\n    const button = {...props};\n    delete button.children;\n\n    if (props.disabled === 'formState')\n        button.disabled = state.error;\n\n    return (<button {...button}>{props.children}</button>);\n}\n\nexport { Button };", "import React from 'react';\nimport { OptionList } from \"./option_list.jsx\";\n\nfunction Datalist(props) {\n\n    const datalist = {...props};\n    datalist.id ??= props.name;\n\n    if (props.options) {\n        delete datalist.options;\n        return (<datalist {...datalist}>\n            <OptionList options={props.options} />\n        </datalist>);\n    }\n\n    delete datalist.children;\n\n    return (<datalist {...datalist}>\n        {props.children}\n    </datalist>);\n}\n\nexport { Datalist };", "import * as FormProvider from \"./FormProvider.jsx\";\n\nfunction StateValue(props) {\n    const state = FormProvider.useFieldState(props.forInput);\n\n    if (typeof props.display === 'function')\n        return props.display(state.value);\n\n    return state.value;\n}\n\nexport { StateValue };", "import * as FormProvider from \"./FormProvider.jsx\";\n\nfunction ErrorMessage(props) {\n    const state = FormProvider.useFieldState(props.forInput);\n\n    if (typeof props.display === 'function')\n        return props.display(props.forInput, state.error);\n    \n    return state.error;\n}\n\nexport { ErrorMessage };"],
  "mappings": "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",
  "names": ["React", "import_react", "React", "import_react", "React", "import_react", "import_react", "import_react", "React", "React", "React", "import_react", "React", "import_react", "React", "import_react", "React"]
}
